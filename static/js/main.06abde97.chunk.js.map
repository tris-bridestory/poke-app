{"version":3,"sources":["actions.js","usePokemonReducer.js","PokemonContext.js","App.js","reportWebVitals.js","index.js"],"names":["CAPTURE","RELEASE","ADD_POKEMON","ADD_POKEMONS","FETCH_POKEMON","UPDATE_CAPTURED_POKEMON","getCapturedPokemons","capturedPokemons","releasedPokemon","filter","pokemon","name","setCapturedPokemons","capturedPokemon","state","some","p","id","temp","index","parseInt","findIndex","x","push","pokemonReducer","action","type","pokemons","currentPokemon","capturePokemon","localStorage","setItem","JSON","stringify","releasePokemon","addPokemon","addPokemons","fetchCurrentPokemon","updateCapturedPokemon","PokemonContext","createContext","PokemonProvider","props","useReducer","getItem","parse","dispatch","providerValue","capture","useCallback","release","Provider","value","children","Home","lazy","Detail","PokeDex","App","fallback","Container","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06abde97.chunk.js","sourcesContent":["export const CAPTURE = 'CAPTURE';\nexport const RELEASE = 'RELEASE';\nexport const ADD_POKEMON = 'ADD_POKEMON';\nexport const ADD_POKEMONS = 'ADD_POKEMONS';\nexport const FETCH_POKEMON = 'FETCH_POKEMON';\nexport const UPDATE_CAPTURED_POKEMON = 'UPDATE CAPTURED POKEMON';\n","import { useReducer } from 'react';\nimport { CAPTURE, RELEASE, ADD_POKEMON, ADD_POKEMONS, FETCH_POKEMON, UPDATE_CAPTURED_POKEMON } from './actions';\n\nconst getCapturedPokemons = (capturedPokemons, releasedPokemon) =>\n  capturedPokemons.filter(pokemon => pokemon.name !== releasedPokemon.name)\n\nconst releasePokemon = (releasedPokemon, state) => ({\n  pokemons: state.pokemons,\n  capturedPokemons: getCapturedPokemons(state.capturedPokemons, releasedPokemon),\n  currentPokemon: state.currentPokemon\n});\n\nconst updateCapturedPokemon = (capturedPokemons, state) => ({\n  pokemons: state.pokemons,\n  capturedPokemons: capturedPokemons,\n  currentPokemon: state.currentPokemon\n})\n\nconst setCapturedPokemons = (capturedPokemon, state) => {\n  const found = state.capturedPokemons.some(p => p.id === capturedPokemon.id)\n\n  if (!found) {\n    state.capturedPokemons.push(capturedPokemon)\n    return state.capturedPokemons\n  } else {\n    let temp = state.capturedPokemons\n    let index = parseInt(temp.findIndex(x => x.id === capturedPokemon.id));\n    temp[index] = capturedPokemon\n    \n    return temp\n  }\n}\n\nconst capturePokemon = (pokemon, state) => ({\n  pokemons: state.pokemons,\n  capturedPokemons: setCapturedPokemons(pokemon, state),\n  currentPokemon: state.currentPokemon\n});\n\nconst addPokemon = (pokemon, state) => ({\n  pokemons: [...state.pokemons, pokemon],\n  capturedPokemons: state.capturedPokemons\n});\n\nconst addPokemons = (pokemons, state) => ({\n  pokemons: pokemons,\n  capturedPokemons: state.capturedPokemons,\n  currentPokemon: {}\n});\n\nconst fetchCurrentPokemon = (pokemon, state) => ({\n  pokemons: state.pokemons,\n  capturedPokemons: state.capturedPokemons,\n  currentPokemon: pokemon\n})\n\nconst pokemonReducer = (state, action) => {\n  switch (action.type) {\n    case CAPTURE:\n      return capturePokemon(action.pokemon, state);\n    case RELEASE:\n      localStorage.setItem('pokedex', JSON.stringify(getCapturedPokemons(state.capturedPokemons, action.pokemon)))\n      return releasePokemon(action.pokemon, state);\n    case ADD_POKEMON:\n      return addPokemon(action.pokemon, state);\n    case ADD_POKEMONS:\n      return addPokemons(action.pokemons, state);\n    case FETCH_POKEMON:\n      return fetchCurrentPokemon(action.pokemon, state);\n    case UPDATE_CAPTURED_POKEMON:\n      return updateCapturedPokemon(action.pokemons, state);\n    default:\n      return state;\n  }\n};\n\nexport const usePokemonReducer = () =>\n  useReducer(pokemonReducer, {\n    pokemons: [],\n    capturedPokemons: localStorage.getItem('pokedex') ? JSON.parse(localStorage.getItem('pokedex')) : [],\n    currentPokemon: {}\n  });\n","import React, { createContext, useCallback } from 'react';\nimport { usePokemonReducer } from './usePokemonReducer';\nimport { CAPTURE, RELEASE, ADD_POKEMON, ADD_POKEMONS, FETCH_POKEMON, UPDATE_CAPTURED_POKEMON } from './actions';\n\nconst PokemonContext = createContext();\n\nconst PokemonProvider = (props) => {\n  const [state, dispatch] = usePokemonReducer();\n  const { pokemons, capturedPokemons, currentPokemon } = state;\n\n  const capture = useCallback((pokemon) => dispatch({ type: CAPTURE, pokemon }), [dispatch]);\n  const release = (pokemon) => () => dispatch({ type: RELEASE, pokemon });\n  const addPokemon = (pokemon) => dispatch({ type: ADD_POKEMON, pokemon });\n  const addPokemons = useCallback((pokemons) => dispatch({ type: ADD_POKEMONS, pokemons }), [dispatch]);\n  const fetchCurrentPokemon = useCallback((pokemon) => dispatch({ type : FETCH_POKEMON, pokemon }), [dispatch]);\n  const updateCapturedPokemon = useCallback((pokemons) => dispatch({ type : UPDATE_CAPTURED_POKEMON, pokemons }), [dispatch])\n\n  const providerValue = {\n    pokemons,\n    capturedPokemons,\n    currentPokemon,\n    capture,\n    release,\n    addPokemon,\n    addPokemons,\n    fetchCurrentPokemon,\n    updateCapturedPokemon\n  };\n\n  return (\n    <PokemonContext.Provider value={providerValue}>\n      {props.children}\n    </PokemonContext.Provider>\n  )\n};\n\nexport { PokemonContext, PokemonProvider };\n","import React, { Suspense, lazy } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport { PokemonProvider } from './PokemonContext';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst Home = lazy(() => import('./pages/home'));\nconst Detail = lazy(() => import('./pages/detail'));\nconst PokeDex = lazy(() => import('./pages/pokedex'));\n\nconst App = () => (\n  <PokemonProvider>\n    <Router>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Container>\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/detail/:id\" component={Detail}/>\n            <Route path=\"/pokedex\" component={PokeDex}/>\n          </Switch>\n        </Container>\n      </Suspense>\n    </Router>\n  </PokemonProvider>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}